- make overall build system
- deny external access to kernel variables / accessible only by functions.
- produce / consume systicks, start failsafe context-switch kernel superviser
- maybe in future remove demo and leave only apps
- tid different of idx
- event subscribe for multiple modules/tasks
- implement archint type (fast integer)
- think about io,ipc,sem,sched be separate modules dynamically inserted in kconsume_events??
- decide if have to use separate work queue for kernel modules
- some kernel work events cannot be consumed immediately? they have to remain stored in queue??
- statistics idle time, load, uptime etc?
- implement semaphore, queue, ipc, io, etc. in kernel.
- task timer - waiting timer - have to implement semapahores before.
- task state IPC_WAIT?
- write about tasks in docs/ how they are ran, fsm, exit/return.
- task yeld ??
- tickless !!
- remove exited tasks
- duplicate task names??
- kernel version, compilation time, etc ?
- code
- debug
- etc
